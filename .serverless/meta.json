{
  "C:\\Users\\aintf\\event-manager": {
    "versionSfCore": null,
    "versionFramework": "4.2.5",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>"
    },
    "composeServiceName": null,
    "servicePath": "C:\\Users\\aintf\\event-manager",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "dylanr96",
      "app": "event-manager",
      "service": "event-manager",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "eu-north-1",
        "iam": {
          "role": "arn:aws:iam::992382623759:role/studies-role"
        },
        "httpApi": {
          "cors": true
        },
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "GetEventsLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/event-manager-dev-getEvents"
              }
            },
            "BuyEventLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/event-manager-dev-buyEvent"
              }
            },
            "LoginLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/event-manager-dev-login"
              }
            },
            "GetEventsLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/event-manager/dev/1725816197673-2024-09-08T17:23:17.673Z/event-manager.zip"
                },
                "Handler": "functions/getEvents.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "event-manager-dev-getEvents",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": "arn:aws:iam::992382623759:role/studies-role"
              },
              "DependsOn": [
                "GetEventsLogGroup"
              ]
            },
            "BuyEventLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/event-manager/dev/1725816197673-2024-09-08T17:23:17.673Z/event-manager.zip"
                },
                "Handler": "functions/buyTicket.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "event-manager-dev-buyEvent",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": "arn:aws:iam::992382623759:role/studies-role"
              },
              "DependsOn": [
                "BuyEventLogGroup"
              ]
            },
            "LoginLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/event-manager/dev/1725816197673-2024-09-08T17:23:17.673Z/event-manager.zip"
                },
                "Handler": "functions/login.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "event-manager-dev-login",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": "arn:aws:iam::992382623759:role/studies-role"
              },
              "DependsOn": [
                "LoginLogGroup"
              ]
            },
            "GetEventsLambdaVersiondIJKBrpUXAH90LsfEIesPGqnRbKn1CzFZXnuY7Gj0A": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetEventsLambdaFunction"
                },
                "CodeSha256": "k67EhvNrbXal0XQ8FqudjssgRXDEWLHdX7qak8Zk3gw="
              }
            },
            "BuyEventLambdaVersionVtUoruf99TtVXbqG6PJxrBAduYKYBcjvcCEtPhxSDJY": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "BuyEventLambdaFunction"
                },
                "CodeSha256": "k67EhvNrbXal0XQ8FqudjssgRXDEWLHdX7qak8Zk3gw="
              }
            },
            "LoginLambdaVersionipq1pt1m9RLKReHQeaNbXKUsnn2Yg3J5gWfwFD2zw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "LoginLambdaFunction"
                },
                "CodeSha256": "k67EhvNrbXal0XQ8FqudjssgRXDEWLHdX7qak8Zk3gw="
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-event-manager",
                "ProtocolType": "HTTP",
                "CorsConfiguration": {
                  "AllowCredentials": "<REDACTED>",
                  "AllowHeaders": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "AllowMethods": [
                    "OPTIONS",
                    "GET",
                    "POST"
                  ],
                  "AllowOrigins": [
                    "*"
                  ]
                }
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "GetEventsLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetEventsLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationGetEvents": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "GetEventsLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetEvents": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /events",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationGetEvents"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationGetEvents"
            },
            "BuyEventLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "BuyEventLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationBuyEvent": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "BuyEventLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostBuyevent": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /buyEvent",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationBuyEvent"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationBuyEvent"
            },
            "LoginLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "LoginLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationLogin": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "LoginLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostEventLogin": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /event/login",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationLogin"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationLogin"
            },
            "eventsDb": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "Event",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "id",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "id",
                    "KeyType": "HASH"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST"
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-event-manager-dev-ServerlessDeploymentBucketName"
              }
            },
            "GetEventsLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetEventsLambdaVersiondIJKBrpUXAH90LsfEIesPGqnRbKn1CzFZXnuY7Gj0A"
              },
              "Export": {
                "Name": "sls-event-manager-dev-GetEventsLambdaFunctionQualifiedArn"
              }
            },
            "BuyEventLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "BuyEventLambdaVersionVtUoruf99TtVXbqG6PJxrBAduYKYBcjvcCEtPhxSDJY"
              },
              "Export": {
                "Name": "sls-event-manager-dev-BuyEventLambdaFunctionQualifiedArn"
              }
            },
            "LoginLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "LoginLambdaVersionipq1pt1m9RLKReHQeaNbXKUsnn2Yg3J5gWfwFD2zw"
              },
              "Export": {
                "Name": "sls-event-manager-dev-LoginLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-event-manager-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-event-manager-dev-HttpApiUrl"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "getEvents": {
          "handler": "functions/getEvents.handler",
          "events": [
            {
              "httpApi": {
                "path": "/events",
                "method": "GET"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/events"
            }
          ],
          "name": "event-manager-dev-getEvents",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetEventsLambdaVersiondIJKBrpUXAH90LsfEIesPGqnRbKn1CzFZXnuY7Gj0A"
        },
        "buyEvent": {
          "handler": "functions/buyTicket.handler",
          "events": [
            {
              "httpApi": {
                "path": "/buyEvent",
                "method": "POST"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/buyEvent"
            }
          ],
          "name": "event-manager-dev-buyEvent",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "BuyEventLambdaVersionVtUoruf99TtVXbqG6PJxrBAduYKYBcjvcCEtPhxSDJY"
        },
        "login": {
          "handler": "functions/login.handler",
          "events": [
            {
              "httpApi": {
                "path": "/event/login",
                "method": "POST"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/event/login"
            }
          ],
          "name": "event-manager-dev-login",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "LoginLambdaVersionipq1pt1m9RLKReHQeaNbXKUsnn2Yg3J5gWfwFD2zw"
        }
      },
      "resources": {
        "Resources": {
          "eventsDb": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Event",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {}
      }
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\norg: dylanr96\n# \"app\" enables Serverless Framework Dashboard features and sharing them with other Services.\napp: event-manager\n# \"service\" is the name of this project. This will also be added to your AWS resource names.\nservice: event-manager\n\nprovider:\n  name: aws\n  runtime: nodejs20.x\n  region: eu-north-1\n  iam:\n    role: arn:aws:iam::992382623759:role/studies-role\n  httpApi:\n    cors: true\n\nfunctions:\n  getEvents:\n    handler: functions/getEvents.handler\n    events:\n      - httpApi:\n          path: \"/events\"\n          method: GET\n  buyEvent:\n    handler: functions/buyTicket.handler\n    events:\n      - httpApi:\n          path: \"/buyEvent\"\n          method: POST\n  login:\n    handler: functions/login.handler\n    events:\n      - httpApi:\n          path: \"/event/login\"\n          method: POST\nresources:\n  Resources:\n    eventsDb:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: Event\n        AttributeDefinitions:\n          - AttributeName: id\n            AttributeType: S\n        KeySchema:\n          - AttributeName: id\n            KeyType: HASH\n        BillingMode: PAY_PER_REQUEST\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "b443f0c4c16598266b79a939113fa6ba",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "6a1b92c2-adf2-48be-8931-cc6dc69070a6",
    "orgName": "dylanr96",
    "userId": "xBStRKHGYzGKWhCczX",
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": false,
        "monitoring": false
      },
      "orgObservabilityIntegrations": null,
      "serviceAppId": "6M6djr4RZBx9kft3TD",
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "dylanr96",
    "subscription": null,
    "userEmail": "dylan.ravenson@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "992382623759",
    "projectType": "framework",
    "versionSf": "4.2.5",
    "serviceProviderAwsCfStackName": "event-manager-dev",
    "integrations": {},
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:eu-north-1:992382623759:stack/event-manager-dev/d99e82a0-6450-11ef-8647-06eadcc4c7f5",
    "serviceProviderAwsCfStackCreated": "2024-08-27T08:46:28.348Z",
    "serviceProviderAwsCfStackUpdated": "2024-09-08T17:23:18.778Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "BuyEventLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:992382623759:function:event-manager-dev-buyEvent:64",
        "Description": "Current Lambda function version",
        "ExportName": "sls-event-manager-dev-BuyEventLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "8vzihxkfu5",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-event-manager-dev-HttpApiId"
      },
      {
        "OutputKey": "GetEventsLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:992382623759:function:event-manager-dev-getEvents:74",
        "Description": "Current Lambda function version",
        "ExportName": "sls-event-manager-dev-GetEventsLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "LoginLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:992382623759:function:event-manager-dev-login:29",
        "Description": "Current Lambda function version",
        "ExportName": "sls-event-manager-dev-LoginLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "event-manager-dev-serverlessdeploymentbucket-ovjvrcd9af46",
        "ExportName": "sls-event-manager-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://8vzihxkfu5.execute-api.eu-north-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-event-manager-dev-HttpApiUrl"
      }
    ]
  }
}